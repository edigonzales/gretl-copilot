plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.6'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'gg.jte.gradle' version '3.1.16'
}

apply from: "$rootDir/gradle/versioning.gradle"
//apply from: "$rootDir/gradle/docker.gradle"

group = 'ch.so.agi.gretl'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springAiVersion', "1.0.3")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'gg.jte:jte-spring-boot-starter-3:3.1.16'
    implementation 'org.springframework.ai:spring-ai-starter-model-openai'
    implementation 'org.postgresql:postgresql'
    implementation 'com.pgvector:pgvector:0.1.5'
    implementation 'org.commonmark:commonmark:0.27.0'
    implementation 'org.commonmark:commonmark-ext-gfm-tables:0.27.0'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
    }
}

jte {
    generate()
    binaryStaticContent = true
}

bootJar {
    archiveClassifier.set('exec')
}

tasks.named('test') {
    useJUnitPlatform()
}
